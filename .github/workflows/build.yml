name: 🚀 Build & Release Professional Cold Email CLI

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  
jobs:
  test:
    name: 🧪 Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📚 Install dependencies
        run: npm ci
        
      - name: 🔍 Type checking
        run: npm run type-check
        
      - name: 🧹 Lint code
        run: npm run lint
        
      - name: 🧪 Run tests
        run: npm run test
        
      - name: 🏗️ Build project
        run: npm run build

  build-mac:
    name: 🍎 Build macOS App
    runs-on: macos-latest
    needs: test
    if: github.event_name == 'push' || github.event_name == 'release'
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📚 Install dependencies
        run: npm ci
        
      - name: 🍎 Build Mac app bundle
        run: npm run build:mac
        
      - name: 📦 Create Mac installer
        run: npm run build:installer
        
      - name: 📤 Upload Mac artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mac-build
          path: |
            build/Cold Email CLI.app
            build/*.pkg
            build/*.dmg
          retention-days: 30

  build-cross-platform:
    name: 🌐 Build Cross-Platform
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📚 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build project
        run: npm run build
        
      - name: 📦 Create package
        run: npm pack
        
      - name: 📤 Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: npm-package-${{ matrix.os }}
          path: '*.tgz'
          retention-days: 30

  release:
    name: 🚀 Create Release
    runs-on: macos-latest
    needs: [test, build-mac, build-cross-platform]
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
          
      - name: 📚 Install dependencies
        run: npm ci
        
      - name: 🍎 Build Mac release
        run: npm run release
        
      - name: 📥 Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          
      - name: 📝 Extract version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        
      - name: 🚀 Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Professional Cold Email CLI v${{ steps.version.outputs.VERSION }}
          body: |
            ## 🚀 Professional Cold Email CLI v${{ steps.version.outputs.VERSION }}
            
            **Sponsored by LeadMagic** - Advanced B2B lead generation and cold email automation platform
            
            ### 🎯 What's Included
            - **Mac App Bundle** - Drag & drop to Applications
            - **Mac Installer (.pkg)** - Professional installer with welcome screens  
            - **Cross-Platform npm Package** - Install via `npm install -g`
            
            ### 📥 Installation Options
            
            #### 🍎 macOS Users
            1. Download `Professional-Cold-Email-CLI-v${{ steps.version.outputs.VERSION }}.pkg`
            2. Run the installer
            3. Launch from Applications or use `cold-email-cli` in Terminal
            
            #### 🐧 Linux / 🪟 Windows
            ```bash
            npm install -g professional-cold-email-cli@${{ steps.version.outputs.VERSION }}
            ```
            
            ### ⚡ Platform Support
            - 🎯 **SmartLead** - 82+ commands for scale & analytics
            - ⚡ **Instantly** - 35+ commands for volume & deliverability  
            - 🤖 **SalesForge** - 82+ commands for AI & personalization
            
            **Total: 200+ Commands** across all cold email platforms
            
            ---
            
            🌟 **Sponsored by [LeadMagic](https://leadmagic.io)** - The advanced B2B lead generation platform
          files: |
            build/*.pkg
            build/*.dmg
            artifacts/**/*.tgz
          prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}
          
      - name: 📦 Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  notify:
    name: 📢 Notify Success
    runs-on: ubuntu-latest
    needs: [release]
    if: success() && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: 🎉 Success notification
        run: |
          echo "🚀 Professional Cold Email CLI successfully released!"
          echo "📦 Available on npm and GitHub Releases"
          echo "🌟 Sponsored by LeadMagic - https://leadmagic.io" 