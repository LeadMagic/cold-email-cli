name: 🚀 SmartLead CLI - CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  release:
    types: [ published ]

jobs:
  test:
    name: 🧪 Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: npm ci
      
    - name: 🔍 TypeScript Type Check
      run: npm run type-check
      
    - name: 🧹 Lint Code
      run: npm run lint
      
    - name: 🧪 Run Tests
      run: npm run test:coverage
      
    - name: 📊 Upload Coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: false
        
    - name: 🔨 Build Project
      run: npm run build
      
    - name: ✅ Test CLI Commands
      run: |
        node dist/core/index.js --version
        node dist/core/index.js modules

  quality:
    name: 🏆 Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: npm ci
      
    - name: 🔍 TypeScript Strict Check
      run: npx tsc --noEmit --strict
      
    - name: 🧹 ESLint Analysis
      run: npm run lint -- --format=compact
      
    - name: 💎 Prettier Check
      run: npx prettier --check "src/**/*.ts" "tests/**/*.ts"

  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 🔍 Audit Dependencies
      run: npm audit --audit-level=moderate
      
    - name: 🛡️ Security Scan
      run: npx audit-ci --moderate

  build-matrix:
    name: 🏗️ Build Matrix
    runs-on: ${{ matrix.os }}
    needs: [test, quality]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x]
        
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: npm ci
      
    - name: 🔨 Build Project
      run: npm run build
      
    - name: 🧪 Test Installation
      run: npm pack
      
    - name: ✅ Verify CLI
      run: |
        node dist/core/index.js --version
        node dist/core/index.js --help

  publish-npm:
    name: 📦 Publish to NPM
    runs-on: ubuntu-latest
    needs: [test, quality, security, build-matrix]
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: npm ci
      
    - name: 🔨 Build Project
      run: npm run build
      
    - name: 🧪 Final Test
      run: npm test
      
    - name: 🚀 Publish to NPM
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  notify:
    name: 📢 Notifications
    runs-on: ubuntu-latest
    needs: [test, quality, security]
    if: always()
    
    steps:
    - name: 📊 Workflow Status
      run: |
        echo "Test Status: ${{ needs.test.result }}"
        echo "Quality Status: ${{ needs.quality.result }}"
        echo "Security Status: ${{ needs.security.result }}" 